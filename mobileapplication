import * as React from 'react';
import {
  Text,
  View,
  TextInput,
  TouchableOpacity,
  StyleSheet,
  Alert,
  ScrollView,
  KeyboardAvoidingView,
  Platform,
  FlatList,
} from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';
import { LinearGradient } from 'expo-linear-gradient';
import { MaterialIcons, Ionicons, FontAwesome5 } from '@expo/vector-icons';
import CheckBox from '@react-native-community/checkbox';
// ----- Login Screen -----
function LoginScreen({ navigation }) {
  const [email, setEmail] = React.useState('');
  const [password, setPassword] = React.useState('');
  const handleLogin = () => {
    if (email === 'user@example.com' && password === 'password') {
      navigation.replace('Home');
    } else {
      Alert.alert('Login Failed', 'Use email: user@example.com and password: password');
    }
  };
  return (
    <KeyboardAvoidingView
      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
      style={styles.container}
    >
      <View style={styles.loginBox}>
        <Text style={styles.title}>Welcome Back ðŸ‘‹</Text>
        <Text style={styles.subtitle}>Login to continue</Text>
        <TextInput
          style={styles.input}
          placeholder="Email"
          value={email}
          autoCapitalize="none"
          keyboardType="email-address"
          onChangeText={setEmail}
          placeholderTextColor="#555"
        />
        <TextInput
          style={styles.input}
          placeholder="Password"
          value={password}
          secureTextEntry
          onChangeText={setPassword}
          placeholderTextColor="#555"
        />
        <TouchableOpacity style={styles.button} onPress={handleLogin} activeOpacity={0.8}>
          <Text style={styles.buttonText}>Log In</Text>
        </TouchableOpacity>
      </View>
    </KeyboardAvoidingView>
  );
}

// ----- SSC-Specific Screen with Header & Search -----
const popularSscExams = ['SSC CGL', 'SSC CHSL', 'SSC MTS', 'IB ACIO', 'SSC GD Constable'];

function SscPopularScreen({ navigation }) {
  
  const sscExams = [

  'SSC Selection Post',
  'SSC CPO',
  'SSC Stenographer',
  'Delhi Police Head Constable',
  'SSC Head Constable AWO TPO',
  'Delhi Police MTS',
  'IB Security Assistant',
  'Delhi Police Driver',
  'SSC JHT',
  'CCRAS LDC UDC',
  'Current Affairs SSC JE CE',
  'SSC JE ME',
  'CSIR ASO',
  'SSC Scientific Assistant',
  'Delhi Forest Guard',
  'RSMSSB JE Supreme Court Junior Court',
  'ICMR Assistant',
  'NBBE',
  'NTAA',
  'Delhi University Non Teaching'
];
  

  const [search, setSearch] = React.useState('');
  const filtered = sscExams.filter((e) =>
    e.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <ScrollView style={styles.subTabContent} keyboardShouldPersistTaps="handled">
      {/* Header Row */}
      <View style={styles.headerRow}>
        <View style={{ flexDirection: 'row', alignItems: 'center' }}>
          <MaterialIcons name="school" size={28} color="#4e88ff" style={{ marginRight: 8 }} />
          <Text style={styles.headerTitle}>SSC Exams</Text>
        </View>
        <TouchableOpacity onPress={() => navigation.navigate('Home')}>
          <Ionicons name="home" size={26} color="#4e88ff" />
        </TouchableOpacity>
      </View>

      {/* Search Input */}
      <TextInput
        style={styles.searchInput}
        placeholder="Search SSC exams..."
        value={search}
        onChangeText={setSearch}
        placeholderTextColor="#555"
      />

      {/* Popular SSC Exams */}
      <Text style={[styles.subTitle, { marginTop: 0 }]}>Popular SSC Exams</Text>
      <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{ paddingLeft: 12 }}>
        {popularSscExams.map((exam, idx) => (
          <TouchableOpacity
            key={idx}
            style={{ marginRight: 12 }}
            onPress={() => Alert.alert('Selected', exam)}
            activeOpacity={0.8}
          >
            <LinearGradient
              colors={['#667eea', '#764ba2']}
              style={styles.popularExamCard}
            >
              <Text style={styles.popularExamText}>{exam}</Text>
            </LinearGradient>
          </TouchableOpacity>
        ))}
      </ScrollView>

      {/* All SSC Exams */}
      <Text style={styles.subTitle}>All SSC Exams</Text>
       <FlatList
        data={filtered}
        keyExtractor={(i, idx) => idx.toString()}
        numColumns={2}
        columnWrapperStyle={styles.row}
        contentContainerStyle={{ paddingHorizontal: 16, paddingBottom: 40 }}
        renderItem={({ item }) => {
          const isSsc = item === 'SSC Exams';
          return (
            <TouchableOpacity
              style={[styles.categoryGridItem, isSsc && styles.sscCategoryHighlight]}
              onPress={() => onCategoryPress(item)}
              activeOpacity={0.8}
            >
              <FontAwesome5 name="clipboard-list" size={18} color={isSsc ? '#fff' : '#2446a8'} />
              <Text style={[styles.devButtonText, isSsc && { color: '#fff', fontWeight: '800' }]}>{item}</Text>
            </TouchableOpacity>
          );
        }}
      />
    </ScrollView>
  );
}
// ----- All Exams Main Screen -----
function AllExamsScreen({ navigation }) {
  const categories = [
    'SSC Exams',
    'Banking Exams',
    'Teaching Exams',
    'Civil Service Exams',
    'Railways Exams',
    'Engineering Recruitment Exams',
    'Defence Exams',
    'State Government Exams',
    'Police Exams',
    'Insurance Exams',
    'Nursing Exams',
    'Other Government Exams',
    'NRA CET',
    'PG Entrance Exams',
    'MBA Entrance Exams',
    'CUET and UG Entrance',
    'Accounting and Commerce',
    'Judiciary Exams',
    'Regulatory Body Exams',
  ];

  const popularExams = [
    'SSC CGL',
    'Bank PO',
    'UPSC Civil Services',
    'Railways Exams',
    'Defence Exams',
  ];

  const [search, setSearch] = React.useState('');
  const [selectedPopular, setSelectedPopular] = React.useState(null);
  const prepButtons = ['Start Preparation', 'Syllabus', 'Previous Papers', 'Mock Tests'];
  const filtered = categories.filter((c) =>
    c.toLowerCase().includes(search.toLowerCase())
  );

  const onPopularPress = (exam) => {
    setSelectedPopular((prev) => (prev === exam ? null : exam));
  };

  const onCategoryPress = (cat) => {
    if (cat === 'SSC Exams') {
      navigation.navigate('SscPopular');
    } else {
      navigation.navigate('CategoryDetails', { category: cat });
    }
  };

  return (
    <ScrollView style={styles.subTabContent} keyboardShouldPersistTaps="handled">
      {/* Search */}
      <TextInput
        style={styles.searchInput}
        placeholder="Search categories..."
        value={search}
        onChangeText={setSearch}
        placeholderTextColor="#555"
      />

      {/* Popular Exams Slider */}
      <Text style={styles.subTitle}>Popular Exams</Text>
      <ScrollView horizontal showsHorizontalScrollIndicator={false} contentContainerStyle={{ paddingHorizontal: 12, paddingBottom: 8 }}>
        {popularExams.map((exam, i) => (
          <View key={i} style={{ marginRight: 12 }}>
            <TouchableOpacity activeOpacity={0.8} onPress={() => onPopularPress(exam)}>
              <LinearGradient
                colors={selectedPopular === exam ? ['#ff5e62', '#ff9966'] : ['#a3b9ff', '#7a99ff']}
                style={styles.devButtonHorizontal}
              >
                <MaterialIcons
                  name="star"
                  size={20}
                  color={selectedPopular === exam ? '#fff' : '#2446a8'}
                  style={{ marginRight: 6 }}
                />
                <Text style={[styles.devButtonText, selectedPopular === exam && { color: '#fff' }]}>
                  {exam}
                </Text>
                <View
                  style={[
                    styles.badge,
                    { backgroundColor: selectedPopular === exam ? '#fff' : '#f0f0f0' },
                  ]}
                >
                  <Text style={styles.badgeText}>Popular</Text>
                </View>
              </LinearGradient>
            </TouchableOpacity>

            {selectedPopular === exam && (
              <ScrollView horizontal showsHorizontalScrollIndicator={false} contentContainerStyle={{ marginTop: 8, paddingHorizontal: 6 }}>
                {prepButtons.map((p, j) => (
                  <TouchableOpacity
                    key={j}
                    style={styles.prepButton}
                    activeOpacity={0.8}
                    onPress={() => Alert.alert(p, `${p} for ${exam}`)}
                  >
                    <Text style={styles.prepButtonText}>{p}</Text>
                  </TouchableOpacity>
                ))}
              </ScrollView>
            )}
          </View>
        ))}
      </ScrollView>

      {/* All Categories Grid */}
      <Text style={styles.subTitle}>All Categories</Text>
      <FlatList
        data={filtered}
        keyExtractor={(i, idx) => idx.toString()}
        numColumns={2}
        columnWrapperStyle={styles.row}
        contentContainerStyle={{ paddingHorizontal: 16, paddingBottom: 40 }}
        renderItem={({ item }) => {
          const isSsc = item === 'SSC Exams';
          return (
            <TouchableOpacity
              style={[styles.categoryGridItem, isSsc && styles.sscCategoryHighlight]}
              onPress={() => onCategoryPress(item)}
              activeOpacity={0.8}
            >
              <FontAwesome5 name="clipboard-list" size={18} color={isSsc ? '#fff' : '#2446a8'} />
              <Text style={[styles.devButtonText, isSsc && { color: '#fff', fontWeight: '800' }]}>{item}</Text>
            </TouchableOpacity>
          );
        }}
      />
    </ScrollView>
  );
}

// ----- Tab Screens -----
function StartExamsScreen() {
  return (
    <View style={styles.subTabScreen}>
      <Text style={styles.subTabText}>Start Exams Content</Text>
    </View>
  );
}

function GovExamsScreen() {
  const T = createMaterialTopTabNavigator();
  return (
    <T.Navigator
      screenOptions={{
        tabBarActiveTintColor: '#4e88ff',
        tabBarIndicatorStyle: { backgroundColor: '#4e88ff' },
        tabBarLabelStyle: { fontWeight: '600' },
      }}
    >
      <T.Screen name="All Exams" component={AllExamsScreen} />
      <T.Screen name="Start Exams" component={StartExamsScreen} />
    </T.Navigator>
  );
}

function ButtonGrid() {
  const buttons = [
    { title: 'Cybersecurity', icon: 'shield-checkmark' },
    { title: 'PowerPlatform Full Stack Developer', icon: 'code-slash' },
    { title: 'Java Developer', icon: 'logo-java' },
    { title: '.NET Developer', icon: 'logo-windows' },
    { title: 'PHP Developer', icon: 'logo-php' },
    { title: 'Pega Developer', icon: 'git-branch' },
  ];
  return (
    <ScrollView contentContainerStyle={styles.grid}>
      {buttons.map((btn, idx) => (
        <TouchableOpacity
          key={idx}
          style={styles.devButton}
          activeOpacity={0.8}
          onPress={() => Alert.alert('Selected', btn.title)}
        >
          <Ionicons name={btn.icon} size={20} color="#2446a8" style={{ marginBottom: 6 }} />
          <Text style={styles.devButtonText}>{btn.title}</Text>
        </TouchableOpacity>
      ))}
    </ScrollView>
  );
}

function PrivateJobsScreen() {
  return (
    <ScrollView contentContainerStyle={{ paddingVertical: 16 }}>
      <Text style={styles.subTabText}>Private Jobs Preparation Content</Text>
      <Text style={styles.subTitle}>Explore Career Paths</Text>
      <ButtonGrid />
    </ScrollView>
  );
}

function HomeScreen() {
  const T = createMaterialTopTabNavigator();
  return (
    <View style={{ flex: 1 }}>
      <Text style={styles.screenTitle}>Hi, Welcome!</Text>
      <T.Navigator
        screenOptions={{
          tabBarActiveTintColor: '#4e88ff',
          tabBarIndicatorStyle: { backgroundColor: '#4e88ff' },
          tabBarLabelStyle: { fontWeight: '700', fontSize: 14 },
          tabBarStyle: { backgroundColor: '#f0f4ff' },
        }}
      >
        <T.Screen name="Gov. Exams" component={GovExamsScreen} />
        <T.Screen name="Private Jobs" component={PrivateJobsScreen} />
      </T.Navigator>
    </View>
  );
}

function CategoryDetailsScreen({ route }) {
  const { category } = route.params;
  return (
    <View style={styles.detailsContainer}>
      <Text style={styles.detailsTitle}>{category}</Text>
      <Text style={styles.detailsText}>Details for "{category}" go here.</Text>
    </View>
  );
}

const Stack = createStackNavigator();

export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Login" screenOptions={{ headerTitleAlign: 'center' }}>
        <Stack.Screen name="Login" component={LoginScreen} />
        <Stack.Screen name="Home" component={HomeScreen} options={{ headerShown: false }} />
        <Stack.Screen
          name="CategoryDetails"
          component={CategoryDetailsScreen}
          options={({ route }) => ({ title: route.params.category })}
        />
        <Stack.Screen name="SscPopular" component={SscPopularScreen} options={{ headerShown: false }} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

// ----- Styles -----
const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: '#f1f5ff', justifyContent: 'center' },
  loginBox: {
    backgroundColor: '#e0e9ff',
    marginHorizontal: 24,
    padding: 24,
    borderRadius: 24,
    shadowColor: '#2446a8',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.35,
    shadowRadius: 12,
  },
  title: { fontSize: 32, fontWeight: '900', color: '#2446a8', marginBottom: 6, textAlign: 'center' },
  subtitle: { fontSize: 20, fontWeight: '600', color: '#2446a8', marginBottom: 24, textAlign: 'center' },
  input: {
    backgroundColor: '#fff',
    marginVertical: 8,
    borderRadius: 14,
    paddingHorizontal: 16,
    fontSize: 16,
    fontWeight: '600',
    color: '#2446a8',
    height: 48,
    borderColor: '#a9bcf9',
    borderWidth: 1.5,
  },
  button: { backgroundColor: '#2446a8', paddingVertical: 14, borderRadius: 14, marginTop: 16 },
  buttonText: { color: '#fff', fontWeight: '700', fontSize: 18, textAlign: 'center' },
  screenTitle: { fontSize: 24, fontWeight: '700', color: '#2446a8', marginTop: 24, marginBottom: 12, textAlign: 'center' },
  subTitle: { fontSize: 22, fontWeight: '700', color: '#2446a8', marginVertical: 12, marginLeft: 12 },
  devButtonHorizontal: {
    flexDirection: 'row',
    alignItems: 'center',
    borderRadius: 16,
    paddingVertical: 12,
    paddingHorizontal: 18,
    minWidth: 140,
    borderColor: '#2446a8',
    borderWidth: 1.5,
    shadowColor: '#2446a8',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.4,
    shadowRadius: 10,
  },
  devButtonText: { fontSize: 16, fontWeight: '700', color: '#2446a8', textAlign: 'center' },
  badge: { paddingHorizontal: 8, paddingVertical: 2, borderRadius: 12, marginLeft: 8 },
  badgeText: { color: '#ff5e62', fontWeight: '700', fontSize: 12 },
  prepButton: {
    backgroundColor: '#ff9966',
    borderRadius: 16,
    paddingVertical: 10,
    paddingHorizontal: 14,
    marginHorizontal: 6,
    minWidth: 130,
    alignItems: 'center',
    shadowColor: '#ff5e62',
    shadowOffset: { width: 0, height: 5 },
    shadowOpacity: 0.7,
    shadowRadius: 10,
  },
  prepButtonText: { color: '#fff', fontWeight: '700', fontSize: 14 },
  row: { justifyContent: 'space-between', marginBottom: 12 },
  categoryGridItem: {
    backgroundColor: '#d0deff',
    paddingVertical: 18,
    paddingHorizontal: 14,
    borderRadius: 20,
    width: '48%',
    alignItems: 'center',
    borderColor: '#2446a8',
    borderWidth: 1.5,
    shadowColor: '#2446a8',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.4,
    shadowRadius: 10,
  },
  sscCategoryHighlight: {
    backgroundColor: '#4e88ff',
    borderColor: '#2a5bcc',
    shadowColor: '#2a5bcc',
    shadowOffset: { width: 0, height: 6 },
    shadowOpacity: 0.6,
    shadowRadius: 12,
  },
  subTabContent: { flex: 1, backgroundColor: '#f9faff' },
  searchInput: {
    height: 44,
    margin: 16,
    borderWidth: 1.6,
    borderColor: '#a9bcf9',
    borderRadius: 14,
    paddingHorizontal: 16,
    fontSize: 16,
    fontWeight: '600',
    color: '#2446a8',
    backgroundColor: '#e7eeff',
  },
  subTabScreen: { flex: 1, justifyContent: 'center', alignItems: 'center' },
  subTabText: { fontSize: 18, fontWeight: '600', color: '#2446a8', textAlign: 'center' },
  detailsContainer: { flex: 1, padding: 24, backgroundColor: '#f1f5ff' },
  detailsTitle: { fontSize: 28, fontWeight: 'bold', color: '#2446a8', marginBottom: 12 },
  detailsText: { fontSize: 20, fontWeight: '600', color: '#2446a8' },
  headerRow: {
    flexDirection: 'row',
    alignItems: 'center',
    marginTop: 16,
    marginHorizontal: 16,
  },
  headerTitle: { fontSize: 26, fontWeight: 'bold', color: '#4e88ff' },
  sscExamButton: { margin: 6, borderRadius: 16, overflow: 'hidden', flexBasis: '48%' },
  sscExamGradient: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 14,
    paddingHorizontal: 14,
    borderRadius: 16,
    shadowColor: '#764ba2',
    shadowOffset: { width: 0, height: 5 },
    shadowOpacity: 0.6,
    shadowRadius: 10,
  },
  sscExamText: { color: '#fff', fontWeight: '700', fontSize: 16 },
  grid: { flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-between', paddingHorizontal: 16 },
  subTabContent: { flex: 1, backgroundColor: '#f9faff' },
  headerRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginHorizontal: 16,
    marginTop: 16,
  },
  headerTitle: { fontSize: 26, fontWeight: 'bold', color: '#4e88ff' },
  searchInput: {
    height: 44,
    margin: 16,
    borderWidth: 1.6,
    borderColor: '#a9bcf9',
    borderRadius: 14,
    paddingHorizontal: 16,
    fontSize: 16,
    fontWeight: '600',
    color: '#2446a8',
    backgroundColor: '#e7eeff',
  },
  subTitle: {
    fontSize: 22,
    fontWeight: '700',
    color: '#2446a8',
    marginVertical: 12,
    marginLeft: 12,
  },
  grid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
    paddingHorizontal: 16,
  },
  sscExamButton: {
    margin: 6,
    borderRadius: 16,
    overflow: 'hidden',
    flexBasis: '48%',
  },
  sscExamGradient: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 14,
    paddingHorizontal: 14,
    borderRadius: 16,
    shadowColor: '#764ba2',
    shadowOffset: { width: 0, height: 5 },
    shadowOpacity: 0.6,
    shadowRadius: 10,
  },
  sscExamText: { color: '#fff', fontWeight: '700', fontSize: 16 },
  popularExamCard: {
    paddingHorizontal: 16,
    paddingVertical: 12,
    borderRadius: 16,
    minWidth: 120,
    alignItems: 'center',
  },
  popularExamText: {
    color: '#fff',
    fontWeight: '700',
    fontSize: 14,
  },
});
