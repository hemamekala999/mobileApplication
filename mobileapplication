// App.js

import * as React from 'react';
import {
  Text,
  View,
  TextInput,
  TouchableOpacity,
  StyleSheet,
  Alert,
  ScrollView,
  KeyboardAvoidingView,
  Platform,
  FlatList,
} from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';
import { LinearGradient } from 'expo-linear-gradient';
import { MaterialIcons, Ionicons, FontAwesome5 } from '@expo/vector-icons';
import Checkbox from 'expo-checkbox';

// ----- Login Screen -----
function LoginScreen({ navigation }) {
  const [email, setEmail] = React.useState('');
  const [password, setPassword] = React.useState('');

  const handleLogin = () => {
    if (email === 'user@example.com' && password === 'password') {
      navigation.replace('Home');
    } else {
      Alert.alert('Login Failed', 'Use email: user@example.com and password: password');
    }
  };

  return (
    <KeyboardAvoidingView
      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
      style={styles.container}
    >
      <View style={styles.loginBox}>
        <Text style={styles.title}>Welcome Back ðŸ‘‹</Text>
        <Text style={styles.subtitle}>Login to continue</Text>
        <TextInput
          style={styles.input}
          placeholder="Email"
          value={email}
          autoCapitalize="none"
          keyboardType="email-address"
          onChangeText={setEmail}
          placeholderTextColor="#555"
        />
        <TextInput
          style={styles.input}
          placeholder="Password"
          value={password}
          secureTextEntry
          onChangeText={setPassword}
          placeholderTextColor="#555"
        />
        <TouchableOpacity style={styles.button} onPress={handleLogin} activeOpacity={0.8}>
          <Text style={styles.buttonText}>Log In</Text>
        </TouchableOpacity>
      </View>
    </KeyboardAvoidingView>
  );
}

// ----- SSC Exams Screen -----
const popularSscExams = ['SSC CGL', 'SSC CHSL', 'SSC MTS', 'IB ACIO', 'SSC GD Constable'];

function SscPopularScreen({ navigation }) {
  const sscExams = [
    'SSC Selection Post',
    'SSC CPO',
    'SSC Stenographer',
    'Delhi Police Head Constable',
    'SSC Head Constable AWO TPO',
    'Delhi Police MTS',
    'IB Security Assistant',
    'Delhi Police Driver',
    'SSC JHT',
    'CCRAS LDC UDC',
    'Current Affairs SSC JE CE',
    'SSC JE ME',
    'CSIR ASO',
    'SSC Scientific Assistant',
    'Delhi Forest Guard',
    'RSMSSB JE Supreme Court Junior Court',
    'ICMR Assistant',
    'NBBE',
    'NTAA',
    'Delhi University Non Teaching',
  ];

  const [search, setSearch] = React.useState('');
  const [checkedItems, setCheckedItems] = React.useState({});

  const filtered = sscExams.filter((e) =>
    e.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <ScrollView style={styles.subTabContent} keyboardShouldPersistTaps="handled">
      {/* Header */}
      <View style={styles.headerRow}>
        <View style={{ flexDirection: 'row', alignItems: 'center' }}>
          <MaterialIcons name="school" size={28} color="#4e88ff" style={{ marginRight: 8 }} />
          <Text style={styles.headerTitle}>SSC Exams</Text>
        </View>
        <TouchableOpacity onPress={() => navigation.navigate('Home')}>
          <Ionicons name="home" size={26} color="#4e88ff" />
        </TouchableOpacity>
      </View>

      {/* Search */}
      <TextInput
        style={styles.searchInput}
        placeholder="Search SSC exams..."
        value={search}
        onChangeText={setSearch}
        placeholderTextColor="#555"
      />

      {/* Popular */}
      <Text style={[styles.subTitle, { marginTop: 0 }]}>Popular SSC Exams</Text>
      <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{ paddingLeft: 12 }}>
        {popularSscExams.map((exam) => (
          <TouchableOpacity
            key={exam}
            style={{ marginRight: 12 }}
            onPress={() => Alert.alert('Selected', exam)}
            activeOpacity={0.8}
          >
            <LinearGradient colors={['#667eea', '#764ba2']} style={styles.popularExamCard}>
              <Text style={styles.popularExamText}>{exam}</Text>
            </LinearGradient>
          </TouchableOpacity>
        ))}
      </ScrollView>

      {/* All with Checkboxes */}
      <Text style={styles.subTitle}>All SSC Exams</Text>
      <FlatList
        data={filtered}
        keyExtractor={(item) => item}
        contentContainerStyle={{ paddingHorizontal: 16, paddingBottom: 40 }}
        renderItem={({ item }) => {
          const isChecked = checkedItems[item] || false;
          return (
            <View style={styles.checkboxRow}>
              <View style={{ flexDirection: 'row', alignItems: 'center' }}>
                <FontAwesome5 name="clipboard-list" size={18} color="#2446a8" />
                <Text style={[styles.devButtonText, { marginLeft: 10 }]}>{item}</Text>
                

              </View>
              <Checkbox
                value={isChecked}
                onValueChange={(newVal) =>
                  setCheckedItems((prev) => ({ ...prev, [item]: newVal }))
                }
                color={isChecked ? '#4e88ff' : undefined}
              />
            </View>
          );
        }}
      />
      {Object.values(checkedItems).some(val => val) && (
  <TouchableOpacity
    onPress={() => {
      const selected = Object.entries(checkedItems)
        .filter(([_, val]) => val)
        .map(([key]) => key)
        .join(', ');
      Alert.alert('Start Preparation', `You selected: ${selected}`);
    }}
    style={styles.startPrepButton}
  >
    <Text style={styles.startPrepButtonText}>Start Preparation</Text>
  </TouchableOpacity>
)}
    </ScrollView>
  );
}
//--bankexam--
 function BankingPopularScreen({ navigation }) {
  const bankingTabs = [
    'ALL Exams',
    'Bank PO',
    'Bank SO',
    'Bank Clerk',
    'BSCB',
    'Other'
  ];
const populartab = [
    'IBPS PO',
    'SBI PO',
    'IBPS Clerk',
    'SBI Clerk',
    'BSCB',
    'Other'
  ];

  const examsByTab = {
    'ALL Exams': [
      'Bank of Baroda LBO',
      'RRB Office Assistant',
      'HARCO Bank Clerk',
      'IBPS SO',
      'Bank of Baroda Peon',
      'SBI CBO',
      'Indian Overseas Bank LBO',
      'HDFC Bank Po',
      'Central Bank Of India Credit Officer',
      'Union Bank Of India LBO',
      'UCO Bank LBO',
      'Punjab and Sind Bank LBO',
      'Bank of Baroda Apprentice',
      'Meghalaya Apex Bank Assistant',
      'Bank of Baroda PO',


    ],
    'Bank PO': ['IBPS PO', 'SBI PO'],
    'Bank SO': ['IBPS SO', 'SBI SO'],
    'Bank Clerk': ['IBPS Clerk', 'SBI Clerk'],
    'BSCB': ['Bihar State Cooperative Bank Clerk'],
    'Other': ['NABARD Grade A', 'RRB Officer Scale-1']
  };

  const [selectedTab, setSelectedTab] = React.useState('ALL Exams');
  const [search, setSearch] = React.useState('');
  const [checkedItems, setCheckedItems] = React.useState({});

  const filtered = (examsByTab[selectedTab] || []).filter((e) =>
    e.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <ScrollView style={styles.subTabContent} keyboardShouldPersistTaps="handled">
      <View style={styles.headerRow}>
        <View style={{ flexDirection: 'row', alignItems: 'center' }}>
          <MaterialIcons name="account-balance" size={28} color="#4e88ff" style={{ marginRight: 8 }} />
          <Text style={styles.headerTitle}>Banking Exams</Text>
        </View>
        <TouchableOpacity onPress={() => navigation.navigate('Home')}>
          <Ionicons name="home" size={26} color="#4e88ff" />
        </TouchableOpacity>
      </View>

      {/* Tab Buttons */}
      <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{ marginVertical: 10, paddingLeft: 12 }}>
        {bankingTabs.map((tab) => (
          <TouchableOpacity
            key={tab}
            style={[styles.prepButton, {
              backgroundColor: selectedTab === tab ? '#4e88ff' : '#ccc',
              marginRight: 10
            }]}
            onPress={() => setSelectedTab(tab)}
          >
            <Text style={styles.prepButtonText}>{tab}</Text>
          </TouchableOpacity>
        ))}
      </ScrollView>

      {/* Search */}
      <TextInput
        style={styles.searchInput}
        placeholder={`Search ${selectedTab}...`}
        value={search}
        onChangeText={setSearch}
        placeholderTextColor="#555"
      />

      <Text style={styles.subTitle}>Popular Banking Exams</Text>
      <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{ paddingLeft: 12 }}>
        {examsByTab['ALL Exams'].map((exam) => (
          <TouchableOpacity
            key={exam}
            style={{ marginRight: 12 }}
            onPress={() => Alert.alert('Selected', exam)}
            activeOpacity={0.8}
          >
            <LinearGradient colors={['#43cea2', '#185a9d']} style={styles.popularExamCard}>
              <Text style={styles.popularExamText}>{exam}</Text>
            </LinearGradient>
          </TouchableOpacity>
        ))}
      </ScrollView>

      <Text style={styles.subTitle}>{selectedTab}</Text>
      <FlatList
        data={filtered}
        keyExtractor={(item) => item}
        contentContainerStyle={{ paddingHorizontal: 16, paddingBottom: 40 }}
        renderItem={({ item }) => {
          const isChecked = checkedItems[item] || false;
          return (
            <View style={styles.checkboxRow}>
              <View style={{ flexDirection: 'row', alignItems: 'center' }}>
                <FontAwesome5 name="clipboard-list" size={18} color="#2446a8" />
                <Text style={[styles.devButtonText, { marginLeft: 10 }]}>{item}</Text>
              </View>
              <Checkbox
                value={isChecked}
                onValueChange={(newVal) =>
                  setCheckedItems((prev) => ({ ...prev, [item]: newVal }))
                }
                color={isChecked ? '#4e88ff' : undefined}
              />
            </View>
          );
        }}
      />
      {Object.values(checkedItems).some(val => val) && (
        <TouchableOpacity
          onPress={() => {
            const selected = Object.entries(checkedItems)
              .filter(([_, val]) => val)
              .map(([key]) => key)
              .join(', ');
            Alert.alert('Start Preparation', `You selected: ${selected}`);
          }}
          style={styles.startPrepButton}
        >
          <Text style={styles.startPrepButtonText}>Start Preparation</Text>
        </TouchableOpacity>
      )}
    </ScrollView>
  );
}

// ----- Other Screens -----
function AllExamsScreen({ navigation }) {
  const categories = [
    'SSC Exams',
    'Banking Exams',
    'Teaching Exams',
    'Civil Service Exams',
    'Railways Exams',
    'Engineering Recruitment Exams',
    'Defence Exams',
    'State Government Exams',
    'Police Exams',
    'Insurance Exams',
    'Nursing Exams',
    'Other Government Exams',
    'NRA CET',
    'PG Entrance Exams',
    'MBA Entrance Exams',
    'CUET and UG Entrance',
    'Accounting and Commerce',
    'Judiciary Exams',
    'Regulatory Body Exams',
  ];
  const popularExams = [
    'SSC CGL',
    'Bank PO',
    'UPSC Civil Services',
    'Railways Exams',
    'Defence Exams',
  ];
  const [search, setSearch] = React.useState('');
  const [selectedPopular, setSelectedPopular] = React.useState(null);

  const prepButtons = ['Start Prep', 'Syllabus', 'Previous Papers', 'Mock Tests'];
  const filtered = categories.filter((c) =>
    c.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <ScrollView style={styles.subTabContent} keyboardShouldPersistTaps="handled">
      <TextInput
        style={styles.searchInput}
        placeholder="Search categories..."
        value={search}
        onChangeText={setSearch}
        placeholderTextColor="#555"
      />

      <Text style={styles.subTitle}>Popular Exams</Text>
      <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{ paddingLeft: 12 }}>
        {popularExams.map((exam) => (
          <View key={exam} style={{ marginRight: 12 }}>
            <TouchableOpacity onPress={() => setSelectedPopular((p) => (p === exam ? null : exam))}>
              <LinearGradient
                colors={
                  selectedPopular === exam
                    ? ['#ff5e62', '#ff9966']
                    : ['#a3b9ff', '#7a99ff']
                }
                style={styles.devButtonHorizontal}
              >
                <MaterialIcons name="star" size={20} color={selectedPopular === exam ? '#fff' : '#2446a8'} />
                <Text style={[styles.devButtonText, selectedPopular === exam && { color: '#fff' }]}>
                  {exam}
                </Text>
                <View style={[styles.badge, { backgroundColor: selectedPopular === exam ? '#fff' : '#f0f0f0' }]}>
                  <Text style={styles.badgeText}>Popular</Text>
                </View>
              </LinearGradient>
            </TouchableOpacity>
            {selectedPopular === exam && (
              <ScrollView horizontal style={{ marginTop: 8 }}>
                {prepButtons.map((p) => (
                  <TouchableOpacity
                    key={p}
                    style={styles.prepButton}
                    onPress={() => Alert.alert(p, `${p} for ${exam}`)}
                  >
                    <Text style={styles.prepButtonText}>{p}</Text>
                  </TouchableOpacity>
                ))}
              </ScrollView>
            )}
          </View>
        ))}
      </ScrollView>

      <Text style={styles.subTitle}>All Categories</Text>
      <FlatList
        data={filtered}
        keyExtractor={(i) => i}
        numColumns={2}
        columnWrapperStyle={styles.row}
        contentContainerStyle={{ paddingHorizontal: 16, paddingBottom: 40 }}
        renderItem={({ item }) => {
          const isSsc = item === 'SSC Exams';
          return (
            <TouchableOpacity
              style={[styles.categoryGridItem, isSsc ? styles.sscHighlight : null]}
             onPress={() => {
  if (item === 'SSC Exams') navigation.navigate('SscPopular');
  else if (item === 'Banking Exams') navigation.navigate('BankingPopular');
  else navigation.navigate('CategoryDetails', { category: item });
}}

            >
              <FontAwesome5 name="clipboard-list" size={18} color={isSsc ? '#fff' : '#2446a8'} />
              <Text style={[styles.devButtonText, isSsc && { color: '#fff' }]}>{item}</Text>
            </TouchableOpacity>
          );
        }}
      />
    </ScrollView>
  );
}

function StartExamsScreen() {
  return (
    <View style={styles.subTabScreen}>
      <Text style={styles.subTabText}>Start Exams Content</Text>
    </View>
  );
}

function PrivateJobsScreen() {
  return (
    <ScrollView style={{ flex: 1, paddingTop: 16 }}>
      <Text style={styles.subTabText}>Private Jobs Content?</Text>
      {/* Add your grid here */}
    </ScrollView>
  );
}

function GovExamsScreen() {
  const Tab = createMaterialTopTabNavigator();
  return (
    <Tab.Navigator
      screenOptions={{
        tabBarActiveTintColor: '#4e88ff',
        tabBarIndicatorStyle: { backgroundColor: '#4e88ff' },
        tabBarLabelStyle: { fontWeight: '600' },
      }}
    >
      <Tab.Screen name="All Exams" component={AllExamsScreen} />
      <Tab.Screen name="Start Exams" component={StartExamsScreen} />
    </Tab.Navigator>
  );
}

function HomeScreen() {
  const Tab = createMaterialTopTabNavigator();
  return (
    <View style={{ flex: 1 }}>
      <Text style={styles.screenTitle}>Hi, Welcome!</Text>
      <Tab.Navigator
        screenOptions={{
          tabBarActiveTintColor: '#4e88ff',
          tabBarIndicatorStyle: { backgroundColor: '#4e88ff' },
          tabBarLabelStyle: { fontWeight: '700', fontSize: 14 },
          tabBarStyle: { backgroundColor: '#f0f4ff' },
        }}
      >
        <Tab.Screen name="Gov. Exams" component={GovExamsScreen} />
        <Tab.Screen name="Private Jobs" component={PrivateJobsScreen} />
      </Tab.Navigator>
    </View>
  );
}

function CategoryDetailsScreen({ route }) {
  return (
    <View style={styles.detailsContainer}>
      <Text style={styles.detailsTitle}>{route.params.category}</Text>
      <Text style={styles.detailsText}>Details for {route.params.category}</Text>
    </View>
  );
}

const Stack = createStackNavigator();

export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Login" screenOptions={{ headerTitleAlign: 'center' }}>
        <Stack.Screen name="Login" component={LoginScreen} />
        <Stack.Screen name="Home" component={HomeScreen} options={{ headerShown: false }} />
        <Stack.Screen name="SscPopular" component={SscPopularScreen} options={{ headerShown: false }} />
       <Stack.Screen name="BankingPopular" component={BankingPopularScreen} options={{ headerShown: false }} />
        <Stack.Screen name="CategoryDetails" component={CategoryDetailsScreen} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: '#f1f5ff', justifyContent: 'center' },
  loginBox: {
    marginHorizontal: 24,
    padding: 24,
    borderRadius: 24,
    backgroundColor: '#e0e9ff',
  },
  title: { fontSize: 32, fontWeight: '900', color: '#2446a8', textAlign: 'center' },
  subtitle: { fontSize: 20, fontWeight: '600', color: '#2446a8', marginVertical: 12, textAlign: 'center' },
  input: {
    backgroundColor: '#fff',
    marginVertical: 8,
    paddingHorizontal: 16,
    borderRadius: 14,
    fontSize: 16,
    color: '#2446a8',
    borderColor: '#a9bcf9',
    borderWidth: 1.5,
    height: 48,
  },
  button: { backgroundColor: '#2446a8', padding: 14, borderRadius: 14, marginTop: 16 },
  buttonText: { color: '#fff', fontWeight: '700', fontSize: 18, textAlign: 'center' },
  screenTitle: { fontSize: 24, fontWeight: '700', color: '#2446a8', marginTop: 24, textAlign: 'center' },
  subTabContent: { flex: 1, backgroundColor: '#f9faff' },
  subTitle: { fontSize: 20, fontWeight: '700', color: '#2446a8', margin: 12 },
  searchInput: {
    margin: 16,
    borderColor: '#a9bcf9',
    borderWidth: 1.5,
    borderRadius: 14,
    paddingHorizontal: 16,
    fontSize: 16, height: 44,
    backgroundColor: '#e7eeff', color: '#2446a8',
  },
  headerRow: { flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', margin: 16 },
  headerTitle: { fontSize: 24, fontWeight: '700', color: '#4e88ff' },
  popularExamCard: {
    padding: 12, borderRadius: 16, alignItems: 'center',
  },
  popularExamText: { color: '#fff', fontWeight: '700', fontSize: 14 },
  checkboxRow: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    backgroundColor: '#e0e9ff',
    borderRadius: 14,
    padding: 12,
    marginBottom: 8,
  },
  devButtonHorizontal: {
    flexDirection: 'row', alignItems: 'center', borderRadius: 16,
    padding: 12, borderWidth: 1.5, borderColor: '#2446a8',
  },
  devButtonText: { fontSize: 16, fontWeight: '700', color: '#2446a8' },
  badge: { paddingHorizontal: 8, paddingVertical: 2, borderRadius: 12, marginLeft: 6 },
  badgeText: { fontSize: 12, fontWeight: '700', color: '#ff5e62' },
  prepButton: {
    backgroundColor: '#ff9966', borderRadius: 14,
    padding: 10, marginRight: 8,
  },
  prepButtonText: { color: '#fff', fontWeight: '700' },
  row: { flexDirection: 'row', justifyContent: 'space-between', margin: 8 },
  categoryGridItem: {
    backgroundColor: '#d0deff', padding: 16, borderRadius: 14,
    alignItems: 'center', marginVertical: 8, flexBasis: '48%',
  },
  sscHighlight: {
    backgroundColor: '#4e88ff',
  },
  subTabScreen: { flex: 1, justifyContent: 'center', alignItems: 'center' },
  subTabText: { fontSize: 18, fontWeight: '600', color: '#2446a8' },
  detailsContainer: { flex: 1, padding: 24, backgroundColor: '#f1f5ff' },
  detailsTitle: { fontSize: 28, fontWeight: '700', color: '#2446a8' },
  detailsText: { fontSize: 20, color: '#2446a8' },
  startPrepButton: {
  backgroundColor: '#4e88ff',
  padding: 12,
  marginHorizontal: 16,
  borderRadius: 12,
  alignItems: 'center',
  marginBottom: 24,
},
startPrepButtonText: {
  color: '#fff',
  fontWeight: '700',
  fontSize: 14,
}

});
